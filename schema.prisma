// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String         @id @default(cuid())
  name           String         @default("")
  lastName       String         @default("")
  secondLastName String         @default("")
  email          String         @unique @default("")
  password       String
  phone          String         @default("")
  role           Role[]         @relation("Role_user")
  organization   Organization?  @relation("User_organization", fields: [organizationId], references: [id])
  organizationId String?        @map("organization")
  client         Project?       @relation("User_client", fields: [clientId], references: [id])
  clientId       String?        @map("client")
  quotation      Quotation[]    @relation("Quotation_user")
  formResponse   FormResponse[] @relation("FormResponse_user")
  assignedTo     Job[]          @relation("Job_assigned_to")
  link           String         @unique @default("")
  createdAt      DateTime?      @default(now())

  @@index([organizationId])
  @@index([clientId])
}

model Role {
  id        String    @id @default(cuid())
  name      String
  user      User[]    @relation("Role_user")
  createdAt DateTime? @default(now())
}

model Organization {
  id             String    @id @default(cuid())
  name           String    @default("")
  notes          String    @default("")
  user           User[]    @relation("User_organization")
  project        Project[] @relation("Project_organization")
  form           Form[]    @relation("Form_organization")
  logo_id        String?
  logo_filesize  Int?
  logo_width     Int?
  logo_height    Int?
  logo_extension String?
  createdAt      DateTime? @default(now())
}

model Project {
  id             String        @id @default(cuid())
  name           String        @default("")
  type           String
  address        String        @default("")
  start_date     DateTime      @postgresql.Date
  end_date       DateTime      @postgresql.Date
  notes          String        @default("")
  client         User[]        @relation("User_client")
  organization   Organization? @relation("Project_organization", fields: [organizationId], references: [id])
  organizationId String?       @map("organization")
  quotation      Quotation[]   @relation("Quotation_project")
  createdAt      DateTime?     @default(now())

  @@index([organizationId])
}

model Quotation {
  id               String             @id @default(cuid())
  name             String             @default("")
  status           String?
  sale_comission   String             @default("")
  notes            String             @default("")
  user             User?              @relation("Quotation_user", fields: [userId], references: [id])
  userId           String?            @map("user")
  project          Project?           @relation("Quotation_project", fields: [projectId], references: [id])
  projectId        String?            @map("project")
  quotationProduct QuotationProduct[] @relation("QuotationProduct_quotation")
  job              Job?               @relation("Job_quotation")
  createdAt        DateTime?          @default(now())

  @@index([userId])
  @@index([projectId])
}

model QuotationProduct {
  id          String     @id @default(cuid())
  quantity    Int
  discount    Decimal?   @default("0.0") @postgresql.Decimal(18, 4)
  notes       String     @default("")
  quotation   Quotation? @relation("QuotationProduct_quotation", fields: [quotationId], references: [id])
  quotationId String?    @map("quotation")
  product     Product?   @relation("QuotationProduct_product", fields: [productId], references: [id])
  productId   String?    @map("product")
  createdAt   DateTime?  @default(now())

  @@index([quotationId])
  @@index([productId])
}

model Product {
  id               String             @id @default(cuid())
  name             String             @default("")
  price            Decimal?           @postgresql.Decimal(18, 4)
  notes            String             @default("")
  quotationProduct QuotationProduct[] @relation("QuotationProduct_product")
  createdAt        DateTime?          @default(now())
}

model Job {
  id            String         @id @default(cuid())
  description   String         @default("")
  status        String
  notes         String         @default("")
  scheduled_at  DateTime       @postgresql.Date
  completed_at  DateTime       @postgresql.Date
  assigned_to   User?          @relation("Job_assigned_to", fields: [assigned_toId], references: [id])
  assigned_toId String?        @map("assigned_to")
  quotation     Quotation?     @relation("Job_quotation", fields: [quotationId], references: [id])
  quotationId   String?        @unique @map("quotation")
  form          Form[]         @relation("Form_job")
  formResponse  FormResponse[] @relation("FormResponse_job")
  createdAt     DateTime?      @default(now())

  @@index([assigned_toId])
}

model Form {
  id             String         @id @default(cuid())
  name           String         @default("")
  description    String         @default("")
  notes          String         @default("")
  organization   Organization?  @relation("Form_organization", fields: [organizationId], references: [id])
  organizationId String?        @map("organization")
  job            Job[]          @relation("Form_job")
  question       Question[]     @relation("Question_form")
  formResponse   FormResponse[] @relation("FormResponse_form")
  createdAt      DateTime?      @default(now())

  @@index([organizationId])
}

model Question {
  id          String    @id @default(cuid())
  question    String    @default("")
  description String    @default("")
  type        String
  index       Int?      @default(1)
  form        Form?     @relation("Question_form", fields: [formId], references: [id])
  formId      String?   @map("form")
  answer      Answer[]  @relation("Answer_question")
  createdAt   DateTime? @default(now())

  @@index([formId])
}

model Answer {
  id          String    @id @default(cuid())
  answer      String    @default("")
  description String    @default("")
  question    Question? @relation("Answer_question", fields: [questionId], references: [id])
  questionId  String?   @map("question")
  createdAt   DateTime? @default(now())

  @@index([questionId])
}

model FormResponse {
  id           String    @id @default(cuid())
  user         User?     @relation("FormResponse_user", fields: [userId], references: [id])
  userId       String?   @map("user")
  form         Form?     @relation("FormResponse_form", fields: [formId], references: [id])
  formId       String?   @map("form")
  job          Job?      @relation("FormResponse_job", fields: [jobId], references: [id])
  jobId        String?   @map("job")
  started_at   DateTime  @postgresql.Date
  completed_at DateTime  @postgresql.Date
  createdAt    DateTime? @default(now())

  @@index([userId])
  @@index([formId])
  @@index([jobId])
}
